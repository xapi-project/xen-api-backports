commit 04822c0a3134cff7e381e3370cd8bdc9f954681e
Author: John Else <john.else@citrix.com>
Date:   Wed Jul 16 15:09:34 2014 +0100

    Don't build the toplevel printers
    
    Signed-off-by: John Else <john.else@citrix.com>

diff --git a/_oasis b/_oasis
index 4e43d4f..496e688 100644
--- a/_oasis
+++ b/_oasis
@@ -30,18 +30,6 @@ Library ipaddr_unix
   Modules: Ipaddr_unix
   BuildDepends: unix, ipaddr
 
-Library ipaddr_top
-  Build$:             flag(top)
-  Path:               top
-  FindlibName:        top
-  FindlibParent:      ipaddr
-  Modules:            Ipaddr_top
-  # Compiler libs do not exists for OCaml < 4.0.0 and otherwise always
-  # present.  Use _tags to set them up.
-  # BuildDepends:       compiler-libs.toplevel
-  XMETARequires:      ipaddr
-  XMETADescription:   Toplevel printers for IP addresses
-
 Test ipaddr
   Run: true
   Command: make
diff --git a/_tags b/_tags
index d8efb66..630772c 100644
--- a/_tags
+++ b/_tags
@@ -1,5 +1,5 @@
 # OASIS_START
-# DO NOT EDIT (digest: 6e3d75e627e8d27796e5d44e56fed7b0)
+# DO NOT EDIT (digest: 4bfe17c13490429ae0c6ed406d9a3193)
 # Ignore VCS directories, you can use the same kind of rule outside
 # OASIS_START/STOP if you want to exclude directories that contains
 # useless stuff for the build process
@@ -23,8 +23,6 @@
 "lib/ipaddr_unix.cmxs": use_ipaddr_unix
 <lib/*.ml{,i}>: use_ipaddr
 <lib/*.ml{,i}>: pkg_unix
-# Library ipaddr_top
-"top/ipaddr_top.cmxs": use_ipaddr_top
 # OASIS_STOP
 true: debug, annot, bin_annot, principal
 <top/*.ml>: I(+compiler-libs)
diff --git a/lib/META b/lib/META
index 981d2bc..9fa21eb 100644
--- a/lib/META
+++ b/lib/META
@@ -1,5 +1,5 @@
 # OASIS_START
-# DO NOT EDIT (digest: aace2be48ddf413aa8036abe8779d04c)
+# DO NOT EDIT (digest: 7371065cba5c8960e9b7fdca7b695620)
 version = "2.4.0"
 description =
 "A library for manipulation of IP (and MAC) address representations"
@@ -19,16 +19,5 @@ package "unix" (
  archive(native, plugin) = "ipaddr_unix.cmxs"
  exists_if = "ipaddr_unix.cma"
 )
-
-package "top" (
- version = "2.4.0"
- description = "Toplevel printers for IP addresses"
- requires = "ipaddr"
- archive(byte) = "ipaddr_top.cma"
- archive(byte, plugin) = "ipaddr_top.cma"
- archive(native) = "ipaddr_top.cmxa"
- archive(native, plugin) = "ipaddr_top.cmxs"
- exists_if = "ipaddr_top.cma"
-)
 # OASIS_STOP
 
diff --git a/myocamlbuild.ml b/myocamlbuild.ml
index 6b6538d..84f6ab8 100644
--- a/myocamlbuild.ml
+++ b/myocamlbuild.ml
@@ -1,5 +1,5 @@
 (* OASIS_START *)
-(* DO NOT EDIT (digest: b9f1896c4b44f5c023c34582ffa087bd) *)
+(* DO NOT EDIT (digest: 858711b2d64e72061453d2acc913f518) *)
 module OASISGettext = struct
 (* # 22 "src/oasis/OASISGettext.ml" *)
 
@@ -39,10 +39,10 @@ module OASISExpr = struct
   open OASISGettext
 
 
-  type test = string 
+  type test = string
 
 
-  type flag = string 
+  type flag = string
 
 
   type t =
@@ -52,10 +52,10 @@ module OASISExpr = struct
     | EOr of t * t
     | EFlag of flag
     | ETest of test * string
-    
 
 
-  type 'a choices = (t * 'a) list 
+
+  type 'a choices = (t * 'a) list
 
 
   let eval var_get t =
@@ -394,10 +394,10 @@ module MyOCamlbuildBase = struct
   module OC = Ocamlbuild_pack.Ocaml_compiler
 
 
-  type dir = string 
-  type file = string 
-  type name = string 
-  type tag = string 
+  type dir = string
+  type file = string
+  type name = string
+  type tag = string
 
 
 (* # 62 "src/plugins/ocamlbuild/MyOCamlbuildBase.ml" *)
@@ -412,7 +412,7 @@ module MyOCamlbuildBase = struct
          * directory.
          *)
         includes:  (dir * dir list) list;
-      } 
+      }
 
 
   let env_filename =
@@ -556,11 +556,7 @@ open Ocamlbuild_plugin;;
 let package_default =
   {
      MyOCamlbuildBase.lib_ocaml =
-       [
-          ("ipaddr", ["lib"], []);
-          ("ipaddr_unix", ["lib"], []);
-          ("ipaddr_top", ["top"], [])
-       ];
+       [("ipaddr", ["lib"], []); ("ipaddr_unix", ["lib"], [])];
      lib_c = [];
      flags =
        [
@@ -583,7 +579,7 @@ let package_default =
 
 let dispatch_default = MyOCamlbuildBase.dispatch_default package_default;;
 
-# 587 "myocamlbuild.ml"
+# 583 "myocamlbuild.ml"
 (* OASIS_STOP *)
 let () =
   let additional_rules = function
diff --git a/setup.ml b/setup.ml
index 60a1a00..31f80ea 100644
--- a/setup.ml
+++ b/setup.ml
@@ -1,7 +1,7 @@
 (* setup.ml generated for the first time by OASIS v0.4.1 *)
 
 (* OASIS_START *)
-(* DO NOT EDIT (digest: f1ed772ac7c3d5ed281d13698f0d64d6) *)
+(* DO NOT EDIT (digest: 9018929d3d3301adc619d23efa077536) *)
 (*
    Regenerated by OASIS v0.4.1
    Visit http://oasis.forge.ocamlcore.org for more information and
@@ -686,7 +686,7 @@ module OASISVersion = struct
   type s = string
 
 
-  type t = string 
+  type t = string
 
 
   type comparator =
@@ -697,7 +697,7 @@ module OASISVersion = struct
     | VLesserEqual of t
     | VOr of  comparator * comparator
     | VAnd of comparator * comparator
-    
+
 
 
   (* Range of allowed characters *)
@@ -892,17 +892,17 @@ module OASISLicense = struct
 
 
 
-  type license = string 
+  type license = string
 
 
-  type license_exception = string 
+  type license_exception = string
 
 
   type license_version =
     | Version of OASISVersion.t
     | VersionOrLater of OASISVersion.t
     | NoVersion
-    
+
 
 
   type license_dep_5_unit =
@@ -911,20 +911,20 @@ module OASISLicense = struct
       excption:  license_exception option;
       version:   license_version;
     }
-    
+
 
 
   type license_dep_5 =
     | DEP5Unit of license_dep_5_unit
     | DEP5Or of license_dep_5 list
     | DEP5And of license_dep_5 list
-    
+
 
 
   type t =
     | DEP5License of license_dep_5
     | OtherLicense of string (* URL *)
-    
+
 
 
 end
@@ -939,10 +939,10 @@ module OASISExpr = struct
   open OASISGettext
 
 
-  type test = string 
+  type test = string
 
 
-  type flag = string 
+  type flag = string
 
 
   type t =
@@ -952,10 +952,10 @@ module OASISExpr = struct
     | EOr of t * t
     | EFlag of flag
     | ETest of test * string
-    
 
 
-  type 'a choices = (t * 'a) list 
+
+  type 'a choices = (t * 'a) list
 
 
   let eval var_get t =
@@ -1035,40 +1035,40 @@ module OASISTypes = struct
 
 
 
-  type name          = string 
-  type package_name  = string 
-  type url           = string 
-  type unix_dirname  = string 
-  type unix_filename = string 
-  type host_dirname  = string 
-  type host_filename = string 
-  type prog          = string 
-  type arg           = string 
-  type args          = string list 
-  type command_line  = (prog * arg list) 
+  type name          = string
+  type package_name  = string
+  type url           = string
+  type unix_dirname  = string
+  type unix_filename = string
+  type host_dirname  = string
+  type host_filename = string
+  type prog          = string
+  type arg           = string
+  type args          = string list
+  type command_line  = (prog * arg list)
 
 
-  type findlib_name = string 
-  type findlib_full = string 
+  type findlib_name = string
+  type findlib_full = string
 
 
   type compiled_object =
     | Byte
     | Native
     | Best
-    
+
 
 
   type dependency =
     | FindlibPackage of findlib_full * OASISVersion.comparator option
     | InternalLibrary of name
-    
+
 
 
   type tool =
     | ExternalTool of name
     | InternalExecutable of name
-    
+
 
 
   type vcs =
@@ -1081,7 +1081,7 @@ module OASISTypes = struct
     | Arch
     | Monotone
     | OtherVCS of url
-    
+
 
 
   type plugin_kind =
@@ -1109,7 +1109,7 @@ module OASISTypes = struct
       ]
 
 
-  type 'a plugin = 'a * name * OASISVersion.t option 
+  type 'a plugin = 'a * name * OASISVersion.t option
 
 
   type all_plugin = plugin_kind plugin
@@ -1121,7 +1121,7 @@ module OASISTypes = struct
 (* # 115 "src/oasis/OASISTypes.ml" *)
 
 
-  type 'a conditional = 'a OASISExpr.choices 
+  type 'a conditional = 'a OASISExpr.choices
 
 
   type custom =
@@ -1129,7 +1129,7 @@ module OASISTypes = struct
         pre_command:  (command_line option) conditional;
         post_command: (command_line option) conditional;
       }
-      
+
 
 
   type common_section =
@@ -1138,7 +1138,7 @@ module OASISTypes = struct
         cs_data: PropList.Data.t;
         cs_plugin_data: plugin_data;
       }
-      
+
 
 
   type build_section =
@@ -1158,7 +1158,7 @@ module OASISTypes = struct
         bs_byteopt:         args conditional;
         bs_nativeopt:       args conditional;
       }
-      
+
 
 
   type library =
@@ -1169,28 +1169,28 @@ module OASISTypes = struct
         lib_findlib_parent:     findlib_name option;
         lib_findlib_name:       findlib_name option;
         lib_findlib_containers: findlib_name list;
-      } 
+      }
 
 
   type object_ =
       {
         obj_modules:            string list;
         obj_findlib_fullname:   findlib_name list option;
-      } 
+      }
 
 
   type executable =
       {
         exec_custom:          bool;
         exec_main_is:         unix_filename;
-      } 
+      }
 
 
   type flag =
       {
         flag_description:  string option;
         flag_default:      bool conditional;
-      } 
+      }
 
 
   type source_repository =
@@ -1202,7 +1202,7 @@ module OASISTypes = struct
         src_repo_branch:      string option;
         src_repo_tag:         string option;
         src_repo_subdir:      unix_filename option;
-      } 
+      }
 
 
   type test =
@@ -1213,7 +1213,7 @@ module OASISTypes = struct
         test_working_directory:  unix_filename option;
         test_run:                bool conditional;
         test_tools:              tool list;
-      } 
+      }
 
 
   type doc_format =
@@ -1224,7 +1224,7 @@ module OASISTypes = struct
     | Info of unix_filename
     | DVI
     | OtherDoc
-    
+
 
 
   type doc =
@@ -1240,7 +1240,7 @@ module OASISTypes = struct
         doc_format:      doc_format;
         doc_data_files:  (unix_filename * unix_filename option) list;
         doc_build_tools: tool list;
-      } 
+      }
 
 
   type section =
@@ -1251,7 +1251,7 @@ module OASISTypes = struct
     | SrcRepo    of common_section * source_repository
     | Test       of common_section * test
     | Doc        of common_section * doc
-    
+
 
 
   type section_kind =
@@ -1295,7 +1295,7 @@ module OASISTypes = struct
         plugins:          [`Extra] plugin list;
         schema_data:      PropList.Data.t;
         plugin_data:      plugin_data;
-      } 
+      }
 
 
 end
@@ -6265,7 +6265,7 @@ module OCamlbuildPlugin = struct
     {
       plugin_tags: string option;
       extra_args: string list;
-    } 
+    }
 
 
   let check_ocaml_version version pkg =
@@ -6548,7 +6548,7 @@ module CustomPlugin = struct
         cmd_main:      command_line conditional;
         cmd_clean:     (command_line option) conditional;
         cmd_distclean: (command_line option) conditional;
-      } 
+      }
 
 
   let run  = BaseCustom.run
@@ -6874,40 +6874,6 @@ let setup_t =
                       lib_findlib_name = Some "unix";
                       lib_findlib_containers = []
                    });
-               Library
-                 ({
-                     cs_name = "ipaddr_top";
-                     cs_data = PropList.Data.create ();
-                     cs_plugin_data = []
-                  },
-                   {
-                      bs_build =
-                        [
-                           (OASISExpr.EBool true, false);
-                           (OASISExpr.EFlag "top", true)
-                        ];
-                      bs_install = [(OASISExpr.EBool true, true)];
-                      bs_path = "top";
-                      bs_compiled_object = Best;
-                      bs_build_depends = [];
-                      bs_build_tools = [ExternalTool "ocamlbuild"];
-                      bs_c_sources = [];
-                      bs_data_files = [];
-                      bs_ccopt = [(OASISExpr.EBool true, [])];
-                      bs_cclib = [(OASISExpr.EBool true, [])];
-                      bs_dlllib = [(OASISExpr.EBool true, [])];
-                      bs_dllpath = [(OASISExpr.EBool true, [])];
-                      bs_byteopt = [(OASISExpr.EBool true, [])];
-                      bs_nativeopt = [(OASISExpr.EBool true, [])]
-                   },
-                   {
-                      lib_modules = ["Ipaddr_top"];
-                      lib_pack = false;
-                      lib_internal_modules = [];
-                      lib_findlib_parent = Some "ipaddr";
-                      lib_findlib_name = Some "top";
-                      lib_findlib_containers = []
-                   });
                Test
                  ({
                      cs_name = "ipaddr";
@@ -6938,7 +6904,8 @@ let setup_t =
        };
      oasis_fn = Some "_oasis";
      oasis_version = "0.4.1";
-     oasis_digest = Some "\213\173l\\\168En>\213\244\b\163\rT\176U";
+     oasis_digest =
+       Some "\195\207\189N\166P\237\168D\022\020\000\186\218\"\224";
      oasis_exec = None;
      oasis_setup_args = [];
      setup_update = false
@@ -6946,6 +6913,6 @@ let setup_t =
 
 let setup () = BaseSetup.setup setup_t;;
 
-# 6950 "setup.ml"
+# 6917 "setup.ml"
 (* OASIS_STOP *)
 let () = setup ();;
